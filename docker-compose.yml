version: '3.8'

services:
  php:
    container_name: registration_api_php
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_ENV=local
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - db
    networks:
      - app

  web:
    image: nginx:alpine
    container_name: registration_web
    depends_on:
      - php
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - .docker/nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app

  node:
    container_name: registration_node
    image: node:22-alpine
    user: node
    depends_on:
      - php
    working_dir: /assets
    ports:
      - "5173:5173"
    volumes:
      - ./:/assets
    command: npm run dev
    networks:
      - app

  db:
    image: postgres:15-alpine
    container_name: registration_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgresql:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - app

  pgadmin:
    image: dpage/pgadmin4
    container_name: registration_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - app

volumes:
  postgresql:
    driver: local
  pgadmin:
    driver: local

networks:
  app:
    driver: bridge
